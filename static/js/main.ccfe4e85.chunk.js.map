{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","aria-current","to","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","Text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitalized","msg","Home","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ccfe4e85.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav   className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div   className=\"container-fluid\">\r\n    <a   className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button   className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span   className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div   className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul   className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li   className=\"nav-item\">\r\n          <Link   className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li   className=\"nav-item\">\r\n          <Link   className=\"nav-link\" to=\"/about\">Link</Link>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form   className=\"d-flex\" role=\"search\">\r\n        <input   className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button   className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexCheckIndeterminateDisabled\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminateDisabled\">\r\n            Enable DarkMode\r\n          </label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const UpClick = ()=>{\r\n        let newText = Text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const LoClick = ()=>{\r\n        let newText = Text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n    const Clear = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text is cleared\", \"success\");\r\n    }\r\n    const handleonchange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [Text, setText] = useState('');\r\n    \r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n    <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={Text} onChange={handleonchange} style={{backgroundColor: props.mode==='dark'?'black':'white', color: props.mode==='dark'?'white':'black'}} id=\"TextForm\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mx-3\" onClick={UpClick}>Convert To Uppercase</button>\r\n    <button className=\"btn btn-primary mx-3\" onClick={LoClick}>Convert To Lowercase</button>\r\n    <button className=\"btn btn-primary\" onClick={Clear}>Clear</button>\r\n    </div>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{Text.split(\" \").length} Words & {Text.length} Letters</p>\r\n        <p>{0.008*Text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{Text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalized = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalized (props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import Alert from \"./Alert\"\r\nimport Navbar from \"./Navbar\"\r\nimport TextForm from \"./TextForm\"\r\n\r\nimport React, { useState } from \"react\"\r\n\r\n\r\n\r\nconst Home = ()=>{\r\n    const[mode, setMode] = useState('light');\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode ==='light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor ='black';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor ='white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n    return(\r\n        <>\r\n        <Navbar title=\"Jacks\" mode={mode} toggleMode={toggleMode}/>\r\n    <Alert alert={alert}/>\r\n    <TextForm showAlert={showAlert} heading=\"Enter Text Hear\" mode={mode}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","\n// import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   // createBrowser as Router,\n//   Router,Route,\n//   // Switch,\n  \n// } from \"react-router-dom\";\n\nimport { BrowserRouter,Routes,Route } from 'react-router-dom';\nimport Home from './components/Home';\n\n\n\n\nfunction App() {\n  \n \n  return (\n    <>\n    <BrowserRouter>\n    <Routes>\n      <Route path='/' element={<Home/>} />\n      </Routes></BrowserRouter> \n    {/* <Router>\n    <Navbar title=\"Jacks\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n     <Switch> \n    <Route path=\"/about\" >\n    <About/>\n    </Route>\n    <Route path=\"/\">\n    <TextForm showAlert={showAlert} heading=\"Enter Text Hear\" mode={mode}/>\n    </Route>\n    </Switch> \n    </div>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}